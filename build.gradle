buildscript {
    repositories {
        mavenCentral()
        // These repositories are only for Gradle plugins, put any other repositories in the repository block further below
        maven {
            name = "forge"
            url = "https://maven.minecraftforge.net"
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'gradle.plugin.com.matthewprenger:CurseGradle:1.4.0'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'com.matthewprenger.cursegradle'

group = project.group_id
archivesBaseName = project.mod_id
version = "${project.minecraft_version}-${project.mod_version}"

java {
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

minecraft {
    mappings channel: project.mappings_channel, version: project.mappings
    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'info'

            mods {
                journeymapadditions {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'info'

            mods {
                journeymapadditions {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'journeymapadditions', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                journeymapadditions {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        name = "JourneyMap (Public)"
        url = "https://jm.gserv.me/repository/maven-public/"
    }

    flatDir {
        dirs 'libs'
    }

    maven {
        url "https://www.cursemaven.com"
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${project.forge_version}"
    compileOnly fg.deobf(group: 'info.journeymap', name: 'journeymap-api', version: project.journeymap_api_version, changing: true)
    runtimeOnly fg.deobf("curse.maven:journeymap-${project.jm_project_id}:${project.jm_file_id}")
}

jar {
    dependsOn 'processDocs'
    manifest {
        attributes([
                "Specification-Title"     : project.name,
                "Specification-Vendor"    : project.group_id,
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${archiveVersion}",
                "Implementation-Vendor"   : project.group_id,
                "Implementation-URL"      : "http://journeymap.info",
                "Implementation-Timestamp": getDate()
        ])
    }
}

def getDate() {
    def date = new Date()
    def formattedDate = date.format(project.dateFormat)
    return formattedDate
}

jar.finalizedBy('reobfJar')

task processDocs(type: Copy) {
    // update docs
    from(file("/doc/")) {
        include '*.html'
        expand 'version': project.version,
                'date': getDate(),
                'mcversion': project.minecraft_version,
                'forgeversion': project.forge_version,
                'jmversion': project.jm_version,
                'apiversion': project.journeymap_api_version
    }
    into 'build/doc'
}

curseforge {
    project {
        id = '559764' // project not setup yet
        apiKey = "${curseForgeApiKey}"
        changelogType = 'html'
        releaseType = curse_release_type
        addGameVersion project.minecraft_version
        relations {
            tool 'journeymap'
        }

        mainArtifact(jar) {
            displayName = "${archivesBaseName}-${version}"
            changelog = file('/build/doc/changelog.html')
        }
    }
}